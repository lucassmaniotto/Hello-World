[
  {
    "id": 10,
    "title": "Projeto Integrador - UFFS",
    "text": "> Voc√™ pode consultar o desenvolvimento do projeto no meu reposit√≥rio do [Github](https://github.com/ValtemirJr/ProjetoIntegrador)\n\nO Projeto Integrador foi desenvolvido em 2023 com objetivo da integra√ß√£o de disciplinas do curso de Ci√™ncias da Computa√ß√£o da UFFS, ministradas por Felipe Grando (Programa√ß√£o II), Denio Duarte (Banco de Dados I), Marina Girolimetto e Raquel Aparecida Pegoraro (Engenharia de Software I), com o intuito de desenvolver um sistema web para solucionar um problema real.\n\n ### Descri√ß√£o do Projeto üìù \n O projeto consiste em um sistema de gest√£o da cl√≠nica de terapia e est√©tica [CETAC Chapec√≥](https://cetac-web.vercel.app), na qual foi desenvolvido um site para que clientes solicitem agendamentos e uma √°rea administrativa para as funcion√°rias da cl√≠nica gerenciarem os agendamentos, clientes, se√ß√µes, sevi√ßos e pacotes.\nDurante o desenvolvimento os seguintes requisitos foram desenvolvidos:\n#### Requisitos Funcionais:\n - √Årea p√∫blica com √°rea para solicita√ß√µes de contato;\n - √Årea privada com Login e Autentica√ß√£o de usu√°rio\n - Manuten√ß√£o de Clientes\n - Manuten√ß√£o de Servi√ßos\n - Manuten√ß√£o de Agendamentos\n #### Requisitos N√£o Funcionais:\n - Usabilidade\n - Seguran√ßa \n - Compatibilidade\n - Disponibilidade\n - Requisitos Legais\n\n ### Documenta√ß√£o üìö\n\n - Requisitos de Usu√°rio: [`docs/User Requirements.pdf`](https://github.com/ValtemirJr/ProjetoIntegrador/blob/main/docs/User%20Requirements.pdf)\n - Modelo Conceitual: [`docs/Conceptual Model.png`](https://github.com/ValtemirJr/ProjetoIntegrador/blob/main/docs/Conceptual%20Model.png)\n - Modelo L√≥gico Relacional: [`docs/Relational Logical Model.png`](https://github.com/ValtemirJr/ProjetoIntegrador/blob/main/docs/Relational%20Logical%20Model.png)\n - Modelo F√≠sico: [`db/Physical_Model.sql`](https://github.com/ValtemirJr/ProjetoIntegrador/blob/main/db/Physical_Model.sql)\n\n ### Estrutura do Projeto üìÅ\nO projeto foi dividido em duas pastas, sendo elas `server` e `client`. A pasta `server` cont√©m o c√≥digo do servidor/backend, enquanto a pasta `client` cont√©m o c√≥digo do cliente/frontend.\n\nO projeto tamb√©m conta com uma pasta `docs`, que cont√©m a documenta√ß√£o do projeto, requisitos de usu√°rio, modelo conceitual e modelo l√≥gico relacional.\n\nA pasta `server` cont√©m as seguintes pastas:\n\n `src`: Cont√©m o c√≥digo do servidor.\n - `config`: Cont√©m os arquivos de configura√ß√£o do servidor.\n - `controllers`: Cont√©m os controladores do servidor.\n - `database`: Cont√©m os arquivos de configura√ß√£o do banco de dados.\n - `middlewares`: Cont√©m os middlewares do servidor.\n - `models`: Cont√©m os modelos do banco de dados.\n - `routes`: Cont√©m as rotas do servidor.\n - `app.js`: Arquivo de configura√ß√£o do servidor.\n - `server.js`: Arquivo de inicializa√ß√£o do servidor.\n\n A pasta `client` cont√©m as seguintes pastas:\n\n`src`: Cont√©m o c√≥digo do cliente.\n - `assets`: Cont√©m as imagens dos componentes e do carousel.\n - `components`: Cont√©m os componentes do cliente.\n - `pages`: Cont√©m as p√°ginas do cliente. Ela √© subdividida em `public` e `secure`\n - `util`: Cont√©m scripts de utilidade do cliente.\n - `api`: Cont√©m consumidores da API do servidor.\n\n `public`: Cont√©m os arquivos p√∫blicos do cliente.\n\n ### Configura√ß√£o do Projeto ‚öôÔ∏è\n\nO projeto foi desenvolvido com o gerenciados de pacotes [npm](https://www.npmjs.com/), portanto √© necess√°rio que o mesmo esteja instalado em sua m√°quina. Para instalar as depend√™ncias do projeto, execute o comando `npm install` na pasta raiz das pastas `server` e `client`.\n\n Para executar o projeto, √© necess√°rio configurar o banco de dados. Para isso, crie um banco de dados PostgreSQL e configure as vari√°veis de ambiente do projeto, seguindo o arquivo `.env.example` na pasta `server`, al√©m de executar as migrations do banco de dados, executando o comando `npx sequelize db:migrate`.\n\n ### Execu√ß√£o do Projeto ‚ñ∂Ô∏è\n\nPara executar o projeto, o servidor e o cliente devem ser executados separadamente.\n\n Para executar o servidor, execute o comando `npm run dev` na pasta `server`, e o servidor ser√° executado na porta `3333` em modo de desenvolvimento. Para executar o servidor em modo de produ√ß√£o, execute o comando `npm run start` na pasta `server`.\n\n Para executar o cliente, execute o comando `npm run start-dev` na pasta `client` e o cliente ser√° executado na porta `3000` em modo de desenvolvimento. Para executar o cliente em modo de produ√ß√£o, execute o comando `npm start` na pasta `client`.\n\n Para execu√ß√£o de builds, consulte os arquivos `package.json` das pastas `server` e `client`. \n\n ### Tecnologias Utilizadas üõ†Ô∏è\n\n #### [Node.js](https://nodejs.org/en/): linguagem de programa√ß√£o utilizada para desenvolver o servidor.\n\n - [Express](https://expressjs.com/pt-br/): utilizado para definir os endpoints do servidor.\n - [Sequelize](https://sequelize.org/): utilizado para realizar a conex√£o com o banco de dados, definir os modelos e realizar as migrations.\n - [Nodemon](https://nodemon.io/): utilizado para reiniciar o servidor automaticamente quando um arquivo √© alterado.\n - [Bcrypt](https://www.npmjs.com/package/bcrypt): utilizado para realizar a criptografia de dados sens√≠veis.\n - [Jsonwebtoken](https://www.npmjs.com/package/jsonwebtoken): utilizado para realizar a autentica√ß√£o de usu√°rios.\n - [Cors](https://www.npmjs.com/package/cors): utilizado para permitir o acesso ao servidor de outros dom√≠nios.\n - [Dotenv](https://www.npmjs.com/package/dotenv): utilizado para carregar as vari√°veis de ambiente do servidor.\n - [Pg](https://www.npmjs.com/package/pg) e [Pg-hstore](https://www.npmjs.com/package/pg-hstore): utilizados para realizar a convers√£o de dados do banco de dados PostgreSQL.\n - [Eslint](https://eslint.org/): utilizado para padronizar o c√≥digo.\n\n #### [React](https://pt-br.reactjs.org/): biblioteca utilizada para desenvolver o cliente.\n - [React Router Dom](https://reactrouter.com/web/guides/quick-start): utilizado para definir as rotas do cliente.\n - [React Icons](https://react-icons.github.io/react-icons/): utilizado para utilizar √≠cones .svg.\n - [Styled Components](https://styled-components.com/): utilizado para estilizar os componentes sem a necessidade de arquivos .css e reutiliza√ß√£o de componentes.\n - [Eslint](https://eslint.org/): utilizado para padronizar o c√≥digo.\n - [Prettier](https://prettier.io/): utilizado para padronizar o c√≥digo.\n - [React Slick](https://react-slick.neostack.com/), [Slick Carousel](https://kenwheeler.github.io/slick/), [Framer Motion](https://www.framer.com/motion/): utilizado para criar o carrossel de imagens.\n - [React Google Maps API](https://react-google-maps-api-docs.netlify.app/): utilizado para criar o mapa de localiza√ß√£o da cl√≠nica.\n - [Sweet Alert2](https://sweetalert2.github.io/): utilizado para criar as mensagens de alerta estilizadas.\n - [env-cmd](https://www.npmjs.com/package/env-cmd): utilizado para carregar as vari√°veis de ambiente do cliente.\n\n #### [PostgreSQL](https://www.postgresql.org/): SGBD utilizado para armazenar os dados do projeto.\n\n ### Diagramas üìä \n\n #### Casos de Uso\n\n ![use-case-diagram](https://github.com/ValtemirJr/ProjetoIntegrador/assets/101435037/ec3b17c9-8f9e-4957-984a-3a42fd79d6c3)\n\n #### Modelo Conceitual do Banco de dados\n\n ![dbc](https://raw.githubusercontent.com/ValtemirJr/ProjetoIntegrador/main/docs/Conceptual%20Model.png)\n\n #### Modelo Relacional do Banco de dados ![dbr](https://raw.githubusercontent.com/ValtemirJr/ProjetoIntegrador/main/docs/Relational%20Logical%20Model.png)",
    "tags": [
      {
        "id": 1,
        "name": "React",
        "type": "frontend"
      },
      {
        "id": 2,
        "name": "Node",
        "type": "backend"
      },
      {
        "id": 3,
        "name": "Express",
        "type": "backend"
      },
      {
        "id": 4,
        "name": "PostgreSQL",
        "type": "database"
      },
      {
        "id": 11,
        "name": "Vercel",
        "type": "tools"
      },
      {
        "id": 12,
        "name": "Web",
        "type": "web"
      }
    ]
  },
  {
    "id": 9,
    "title": "Moody üå¶Ô∏è",
    "text": "> Voc√™ pode consultar o desenvolvimento do projeto no meu reposit√≥rio do [Github](https://github.com/lucassmaniotto/Moody)\n\nCRUD Fullstack desenvolvido em ReactJS, NodeJS e integra√ß√£o com Microsoft SQL Server sobre registro de humor di√°rio.\n\n üè∑Ô∏è Tecnologias: javascript, html, css, styled-components, npm, react, node, express, mssql, insomnia, vercel\n\n üöÄ URL: [moody-murex.vercel.app/](https://moody-murex.vercel.app/)\n\n![Banner](https://user-images.githubusercontent.com/101435037/248930118-ad96402b-8b4a-43b2-9fcb-01a6b4ca617c.png)\n\n## Detalhes do projeto\n\nMoody √© um projeto de sistema web que cont√©m um CRUD (Create, Read, Update, Delete) de registro de humor di√°rio, al√©m de um sistema de login e registro de usu√°rios. O projeto foi desenvolvido com o objetivo de colocar em pr√°tica os conhecimentos adquiridos em ReactJS (useState, useEffect, useContext, useNavigate), NodeJS (Express e integra√ß√£o com banco de dados) e Microsoft SQL Server.\n\n### ‚öôÔ∏è Configurando o projeto\n\nO projeto foi desenvolvido com o gerenciador de pacotes [npm](https://www.npmjs.com/), portanto, para executar o projeto √© necess√°rio ter o Node instalado no seu computador. Para instalar as depend√™ncias do projeto, execute o comando abaixo nos diret√≥rios `Moody/frontend` e `Moody/backend`:\n\n```bash\nnpm install\n```\n\n### üìÅ Estrutura do projeto\nO projeto foi subdividido em duas pastas principais, sendo elas:\n* **backend**: cont√©m o c√≥digo do servidor, desenvolvido em NodeJS com Express e integra√ß√£o com Microsoft SQL Server.\n* **frontend**: cont√©m o c√≥digo do cliente, desenvolvido em ReactJS com Styled Components\n\nAdicionalmente, o projeto possui uma pasta **docs** que cont√©m os arquivos referentes ao esquema do banco de dados e o arquivo de rotas do Insomnia para testar as requisi√ß√µes da API\nTamb√©m na pasta **db** cont√©m o arquivo de cria√ß√£o do banco de dados e suas tabelas, al√©m de um arquivo de inser√ß√£o de dados para testes.\n\n### ‚ñ∂Ô∏è Executando o projeto\n\nNo diret√≥rio `Moody/frontend`, voc√™ pode executar o comando abaixo para rodar o Frontend:\n```bash\nnpm start\n\n```\n\nCom o comando acima, voc√™ ir√° rodar o projeto em modo de desenvolvimento que pode ser acessado em [http://localhost:3000](http://localhost:3000) no seu navegador.\n\nPara rodar o Backend, voc√™ pode executar o comando abaixo no diret√≥rio `Moody/backend`:\n```bash\nnpm start\n\n```\n\nCom o comando acima, voc√™ ir√° rodar o projeto em modo de desenvolvimento que pode ser acessado em [http://localhost:3333](http://localhost:3333) no seu navegador.\n\n### üìö Bibliotecas\n#### Frontend\n* [create-react-app](https://www.npmjs.com/package/create-react-app)\n* [react-router-dom](https://www.npmjs.com/package/react-router-dom)\n* [react-icons](https://www.npmjs.com/package/react-icons)\n* [styled-components](https://www.npmjs.com/package/styled-components)\n* [sweetalert2](https://www.npmjs.com/package/sweetalert2)\n* [eslint](https://www.npmjs.com/package/eslint#installation-and-usage)\n* [prettier](https://prettier.io/)\n\n #### Backend\n* [express](https://www.npmjs.com/package/express)\n* [nodemon](https://www.npmjs.com/package/nodemon)\n* [mssql](https://www.npmjs.com/package/mssql)\n* [cors](https://www.npmjs.com/package/cors)\n* [dotenv](https://www.npmjs.com/package/dotenv)\n* [bcrypt](https://www.npmjs.com/package/bcrypt)\n* [eslint](https://www.npmjs.com/package/eslint#installation-and-usage)\n* [prettier](https://prettier.io/)\n\n ### üí° Funcionalidades\n\n #### Login e registro de usu√°rios\n\n O Moody conta com um formul√°rio de registro e login de usu√°rios, onde o usu√°rio pode se cadastrar e fazer login para acessar o sistema. Para o registro de usu√°rios, √© necess√°rio informar um nome, um e-mail e uma senha e os dados s√£o enviados para a API que os insere no banco de dados. Para o login, √© necess√°rio informar o e-mail e a senha e os dados s√£o enviados para a API que verifica se o usu√°rio existe e se a senha est√° correta. Caso o usu√°rio n√£o exista ou a senha esteja incorreta, o usu√°rio √© informado com uma mensagem de erro. \n\n ![Login](https://github.com/lucassmaniotto/Moody/assets/101435037/672dbd02-8e64-4d0b-a913-9c96fffc49a7) \n\n ![Registro](https://github.com/lucassmaniotto/Moody/assets/101435037/ae951289-db0b-4c3d-8e5b-8fff67abf879)\n\n Quando o usu√°rio entra no sistema, √© utilizado o Context API do React para armazenar seu ID e nome, e assim listar os registros vinculados ao seu c√≥digo. Caso o usu√°rio n√£o possua nenhum registro, √© exibido uma mensagem informando que n√£o h√° registros vinculados ao seu usu√°rio dentro da tabela.\n\n ![Robert Smith](https://user-images.githubusercontent.com/101435037/248930118-ad96402b-8b4a-43b2-9fcb-01a6b4ca617c.png)\n\n ![No data](https://github.com/lucassmaniotto/Moody/assets/101435037/ae966fda-df25-4b6c-a95c-4d6cb4e5b7c2)\n\n **OBS:** O sistema n√£o possui um sistema de recupera√ß√£o de senha, n√£o est√° implementado a funcionalidade de autentica√ß√£o e as valida√ß√µes de login s√£o feitas apenas com o Context API do React.\n\n #### CRUD de Humor \n\n O Moody conta com um CRUD de humor, onde o usu√°rio pode registrar seu humor di√°rio. Para isso, o usu√°rio deve informar um tipo de humor j√° pr√©-cadastrado no banco de dados e uma descri√ß√£o. Quando inserido os dados s√£o salvos no banco de dados e inseridos na tabela, onde o tipo de humor √© exibido com um emoji representando seu humor, a descri√ß√£o e a data na qual foi cadastrado o humor. O usu√°rio tamb√©m pode editar e excluir um humor j√° cadastrado.\n\n As a√ß√µes de editar e excluir um humor podem ser realizadas na coluna A√ß√µes da tabela.\n\n ![Modal](https://github.com/lucassmaniotto/Moody/assets/101435037/dd50f1d4-07f0-4b86-8d2b-80e1e504415f)\n\n Para editar um humor, o usu√°rio deve clicar no bot√£o de editar e preencher no modal do SweetAlert2 os dados que deseja alterar. Quando o usu√°rio clica em salvar, os dados s√£o enviados para a API que atualiza os dados no banco de dados e na tabela. \n\n Casos o usu√°rio queira excluir um humor, ele deve clicar no bot√£o de excluir e confirmar a exclus√£o no modal do SweetAlert2. Quando o usu√°rio confirma a exclus√£o, os dados s√£o enviados para a API que exclui os dados do banco de dados e da tabela.",
    "tags": [
      {
        "id": 5,
        "name": "React",
        "type": "frontend"
      },
      {
        "id": 6,
        "name": "Node",
        "type": "backend"
      },
      {
        "id": 7,
        "name": "Express",
        "type": "backend"
      },
      {
        "id": 8,
        "name": "SQL Server",
        "type": "database"
      },
      {
        "id": 9,
        "name": "Insomnia",
        "type": "tools"
      },
      {
        "id": 10,
        "name": "Vercel",
        "type": "tools"
      },
      {
        "id": 13,
        "name": "Web",
        "type": "web"
      }
    ]
  },
  {
    "id": 7,
    "title": "Javad√©x",
    "text": "> Voc√™ pode consultar o desenvolvimento do projeto no meu reposit√≥rio do [Github](https://github.com/lucassmaniotto/Javadex)\n\nProjeto feito para o Trabalho Final da disciplina de Programa√ß√£o I da [Universidade Federal da Fronteira Sul - Chapec√≥/SC](https://cc.uffs.edu.br)\n\n üè∑Ô∏è Tecnologias: java, swing, sql, sqlite, regex, netbeans, vscode\n\nüìÑ Tarefa: [https://encr.pw/5vNT6](https://encr.pw/5vNT6)\n\nüéì Curso: [https://cc.uffs.edu.br](https://cc.uffs.edu.br)\n\n![](https://i.pinimg.com/originals/74/c2/f0/74c2f0be552806e0b686e1396751f4a9.gif)\n\n## Detalhes do projeto\n\nJavad√©x √© um projeto *100% em Java* que consiste na implementa√ß√£o de uma Poked√©x do Anime Pok√©mon, utilizando conceitos de Heran√ßa, Polimorfismo, Classes Abstratas, arquitetura MVC, NetBeans para Front-end, bibliotecas do SQL, Swing e Regex e Banco de Dados com tabelas relacionadas.\n\n### ‚ñ∂Ô∏è Executando o projeto\n\nPara execu√ß√£o do projeto, basta rodar o arquivo Main.java nas IDE's NetBeans ou VSCode, que est√° localizado na pasta src.\n\n### üõ†Ô∏è Diagrama de Classes\n\n![project-uml](https://user-images.githubusercontent.com/101435037/220891568-0aec3022-6cd4-4d01-8e75-f69994cb5edb.jpeg)\n\n### üíæ Schema do DB\n\n![dbPokedexSchema](https://user-images.githubusercontent.com/101435037/220702828-7acd4503-e3b7-4ae4-8da0-e3cbebf22c51.png)\n\n### üí° Funcionalidades\n\n## *Pok√©dex*\n\nO programa consiste em uma tela principal Pok√©dex, na qual possui uma tabela que lista todos Pok√©mons selvagens salvos no banco de dados e um filtro para melhorar suas buscas.\n\n![image](https://user-images.githubusercontent.com/101435037/219979827-d4a233d5-a526-4cc4-9bd2-e3920ebd927d.png)\n\n## *Detalhes do Pok√©mon*\n\n√â poss√≠vel ver a imagem do Pok√©mon quando a linha recebe foco, e quando clicada duas vezes, √© mostrado os detalhes do Pok√©mon em quest√£o.\n\n![image](https://user-images.githubusercontent.com/101435037/219979976-b1774116-502f-4c43-8840-55e5a0d48721.png)\n\n## *Adicionar Pok√©mon Selvagem*\n\nTamb√©m podemos adicionar novos Pok√©mons ao pressionar o bot√£o 'Adicionar Pok√©mon', que abre uma tela com um pequeno formul√°rio.\n\n![image](https://user-images.githubusercontent.com/101435037/219980121-5c48b8c0-3f02-4b44-9442-c6367abfa3b0.png)\n\nCaso algum Pok√©mon que n√£o seja os 151 primeiros for registrado, sua imagem ser√° setada com a do MissigNo na tabela da Poked√©x e nos detalhes.\n\n![missingno](https://user-images.githubusercontent.com/101435037/220159675-8fe55a6c-7d1d-4c3b-b3c5-0c509a62b958.png)\n\n## *Treinadores*\n\nA segunda tela pode ser acessada no bot√£o 'Visualizar Treinadores', que tamb√©m possui funcionalidades semelhantes aos da Pok√©dex, com filtros e tabela de treinadores.\n\n![image](https://user-images.githubusercontent.com/101435037/219980630-4814c035-23c3-404b-aa4a-d63ddc8da923.png)\n\n## *Imagem dos treinadores*\n\n Quando a linha de um treinador √© selecionada, sua imagem √© informada da mesma forma que a dos Pok√©mons da tela anterior.\n\n![image](https://user-images.githubusercontent.com/101435037/219980696-985b3fd5-f63f-4ea5-a8a0-141db3eb86cd.png)\n\nCaso algum treinador n√£o tenha o seu nome no package images/trainers, recebe a imagem do Bug Catcher.\n\n![image](https://user-images.githubusercontent.com/101435037/219980735-88649c32-18f7-4295-bf9c-c0d7c063c0d8.png)\n\n## *Cadastro de treinadores*\n\nAo pressionar o bot√£o 'Adicionar Treinador', a tela de cadastro √© aberta com um pequeno formul√°rio a ser preenchido.\n\n![image](https://user-images.githubusercontent.com/101435037/219980913-e92d6e53-7c60-4df3-a6f3-674ce063b88b.png)\n\n## *Editar um treinador*\n\nPara as pr√≥ximas funcionalidades, √© preciso primeiro selecionar uma linha da tabela para continuar.\n\n![image](https://user-images.githubusercontent.com/101435037/219980990-42acfde0-c131-4511-a9ac-bf0c52ae9734.png)\n\nSelecionando um treinador da lista e apertando no bot√£o 'Editar Treinador' (ou clicando duas vezes em um registro da tabela), podemos mudar sua Regi√£o, Idade e Ins√≠gnias, al√©m de poder administrar seu time com os Pok√©mons Treinados.\n\n![image](https://user-images.githubusercontent.com/101435037/220160470-11cb9858-f574-4c79-b4e5-5d1493c9753e.png)\n\n## *Vincular Pok√©mons aos Treinadores*\n\nSelecionando um treinador da lista e apertando no bot√£o 'Vincular Pok√©mons aos Treinadores', podemos capturar os Pok√©mons selvagens que est√£o dispon√≠veis e torn√°-los treinados, ou soltar eles na natureza, virando um Pok√©mon selvagem.\n\n![image](https://user-images.githubusercontent.com/101435037/220160510-48de3e5a-2aa2-438a-be6b-4f3b452ecf4e.png)\n\n## *Remover Treinador*\n\nAo selecionar um registro da tabela e pressionar o bot√£o Remover Treinador, √© excluido seu registro e seus Pok√©mons treinados se tornam Pok√©mons selvagens.\n\n![image](https://user-images.githubusercontent.com/101435037/220163133-84dac79d-740c-4908-96bd-08c0c373daf9.png)",
    "tags": [
      {
        "id": 14,
        "name": "Java",
        "type": "backend"
      },
      {
        "id": 15,
        "name": "Swing",
        "type": "desktop"
      },
      {
        "id": 16,
        "name": "SQL Lite",
        "type": "database"
      },
      {
        "id": 17,
        "name": "NetBeans",
        "type": "tools"
      },
      {
        "id": 18,
        "name": "Desktop",
        "type": "desktop"
      }
    ]
  },

  {
    "id": 2,
    "title": "AudioTag",
    "text": "> Voc√™ pode consultar o desenvolvimento do projeto no meu reposit√≥rio do [Github](https://github.com/lucassmaniotto/AudioTag)\n\nAudioTag √© uma plataforma de compartilhamento de bandas e de seus clipes desenvolvido durante o curso de pr√°tica de React.js da Alura que consome dados externo de um mock de API, e utiliza ContextAPI e React Router Dom.\n\n üè∑Ô∏è Tecnologias: javascript, html, css, module css, npm, react, jsx\n\nüöÄ URL: [https://audio-tag.vercel.app/](https://audio-tag.vercel.app/)\n\nüìö Curso: [https://cursos.alura.com.br/course/react-praticando-react-js](https://cursos.alura.com.br/course/react-praticando-react-js)\n\n![logo](https://user-images.githubusercontent.com/101435037/215464885-f5d1fc83-25a0-46a1-8fa6-b274338740fa.png#vitrinedev)\n\n## Detalhes do projeto\n\nEste projeto √© uma Single Page Application (SPA) desenvolvido em ReactJS utilizando React Router e ContextAPI para compartilhamento de dados entre as p√°ginas da aplica√ß√£o.\n\n### ‚öôÔ∏è Configurando o projeto\n\nPara que o projeto funcione corretamente, √© necess√°rio instalar as depend√™ncias do projeto. Para isso, basta executar o comando abaixo no terminal:\n\n```bash\nnpm install\n```\n\n### ‚ñ∂Ô∏è Executando o projeto\n\nNo diret√≥rio do projeto, voc√™ pode executar:\n```bash\nnpm start\n\n```\n\nCom o comando acima, voc√™ ir√° rodar o projeto em modo de desenvolvimento que pode ser acessado em [http://localhost:3000](http://localhost:3000) no seu navegador.\n\n### üìö Bibliotecas\n* [react-router-dom](https://reactrouter.com/en/main)\n* [react icons](https://react-icons.github.io/react-icons/)\n\n### üí° Funcionalidades\n\n*Rotas*\n\nVisto que o projeto √© uma SPA, o mesmo funciona como uma p√°gina s√≥, atrav√©s de rotas gerenciadas pelo React Router:\n\n![image](https://user-images.githubusercontent.com/101435037/215462254-cdd6fe8f-1eb2-4da9-9df5-1128b2e4f1b4.png)\n\nAs rotas consistem em duas abas, uma de Home Page que possui cards de bandas, que s√£o consumidas atrav√©s de uma [API](https://my-json-server.typicode.com/lucassmaniotto/api-audiotag/videos) usada com Mock pelo do [My-JSON-Server](https://my-json-server.typicode.com/lucassmaniotto/api-audiotag/videos), onde seu reposit√≥rio pode ser acessado [clicando aqui](https://github.com/lucassmaniotto/api-audiotag).\n\n![image](https://user-images.githubusercontent.com/101435037/215462104-47f030b0-c144-4b14-8dbf-a191a4f72a67.png)\n\n*Renderiza√ß√£o de cards*\n\n Para cada p√°gina de artigo, o conte√∫do √© renderizado em uma rota din√¢mica *videos/:id* com o conte√∫do de json consumido pela Fake API do My-JSON-Server, possibilitando uma variedade de bandas:\n\n ![image](https://user-images.githubusercontent.com/101435037/215463422-4993cd52-2e8b-4657-9471-72b1ee3fbd9b.png)\n\nCada card possui um bot√£o de favorito, onde √© compartilhado o contexto entre as p√°ginas de In√≠cio e Favoritos. Al√©m disso, ao apertar na imagem da banda √© poss√≠vel acessar seus video clipes provindos da Fake API. Quando o card √© favoritado, o mesmo √© inserido na lista de favoritos localizada na aba de Favoritos, al√©m de ser salvo no localStorage do navegador.\n\n![image](https://user-images.githubusercontent.com/101435037/215467835-b112746f-14c0-4782-93ec-d1d50a41ed7b.png)\n\n ![ezgif com-gif-maker](https://user-images.githubusercontent.com/101435037/215462995-663de24d-b1b1-4318-a72d-238bf11c16ff.gif)",
    "tags": [
      {
        "id": 19,
        "name": "React",
        "type": "frontend"
      },
      {
        "id": 21,
        "name": "CSS Modules",
        "type": "frontend"
      },
      {
        "id": 24,
        "name": "Node",
        "type": "backend"
      },
      {
        "id": 20,
        "name": "Vercel",
        "type": "tools"
      },
      {
        "id": 23,
        "name": "Web",
        "type": "web"
      }
    ]
  },

  {
    "id": 1,
    "title": "Hello World!",
    "text": "> Voc√™ pode consultar o desenvolvimento do projeto no meu reposit√≥rio do [Github](https://github.com/lucassmaniotto/Hello-World)\n\nPortif√≥lio implementado com [Create React App](https://github.com/facebook/create-react-app) no curso de [React Router](https://www.alura.com.br/curso-online-React-desenvolvendo-react-router-javaScript) da Alura.\n\n üè∑Ô∏è Tecnologias: javascript, html, styled-components, npm, react, jsx\n\nüöÄ URL: [https://hello-world-lucassmaniotto.vercel.app/](https://hello-world-lucassmaniotto.vercel.app/)\n\nüìö Curso: [https://www.alura.com.br/curso-online-React-desenvolvendo-react-router-javaScript](https://www.alura.com.br/curso-online-React-desenvolvendo-react-router-javaScript)\n\n![image](https://user-images.githubusercontent.com/101435037/212450714-100b5e9c-fe52-41c1-a83d-1fc2024ad079.png#vitrinedev)\n\n## Detalhes do projeto\n\nEste projeto √© uma Single Page Application (SPA) desenvolvido em ReactJS utilizando React Router durante o curso React: desenvolvendo em React Router com JavaScript da Alura.\n\n### ‚öôÔ∏è Configurando o projeto\n\nPara que o projeto funcione corretamente, √© necess√°rio instalar as depend√™ncias do projeto. Para isso, basta executar o comando abaixo no terminal:\n\n```bash\nnpm install\n```\n\n### ‚ñ∂Ô∏è Executando o projeto\n\nNo diret√≥rio do projeto, voc√™ pode executar:\n```bash\nnpm start\n\n```\n\nCom o comando acima, voc√™ ir√° rodar o projeto em modo de desenvolvimento que pode ser acessado em [http://localhost:3000](http://localhost:3000) no seu navegador.\n\n### üìö Bibliotecas\n* [react-router-dom](https://reactrouter.com/en/main)\n* [react-markdown]()\n\n### üí° Funcionalidades\n\n## *Rotas*\n\nVisto que o projeto √© uma SPA, o mesmo funciona como uma p√°gina s√≥, atrav√©s de rotas gerenciadas pelo React Router:\n\n![image](https://user-images.githubusercontent.com/101435037/212456617-7a4a15e6-9650-418c-8cc6-3e3fd2a99b15.png)\n\nAs rotas consistem em duas abas, uma de Home Page que possui meus projetos principais desenvolvidos e disponibilizados no [Github](https://github.com/lucassmaniotto), e uma p√°gina Sobre Mim que conta um pouquinho da minha hist√≥ria com programa√ß√£o, al√©m de coisas que eu gosto bastante.\n\n![ezgif com-gif-maker](https://user-images.githubusercontent.com/101435037/212456753-e2013e6d-89ce-4c52-a105-71e0d5bbfa4f.gif)\n\n## *Renderiza√ß√£o de artigos*\n\nPara cada p√°gina de artigo, o conte√∫do √© renderizado em uma rota din√¢mica *projects/:id* com o conte√∫do de json de cada projeto no qual ocorre itera√ß√µes sobre o mesmo e transformado em Markdown com o React Markdown:\n\n![image](https://user-images.githubusercontent.com/101435037/212456886-15e3f74f-e496-4c3f-8693-8f835f53a255.png)\n\n![image](https://user-images.githubusercontent.com/101435037/212456929-bcd24b26-5ccb-4650-9d70-5ceabd984e5c.png)\n\n![image](https://user-images.githubusercontent.com/101435037/212457579-7b6d2503-557b-4aad-9c61-d673723b5796.png)\n\n## *Tratamento de Rotas*\n\nCaso aconte√ßa algum direcionamento de rota de erro, uma p√°gina 404 √© renderizada com um cachorro salsicha informando poss√≠veis causas e um bot√£o de voltar a p√°gina anterior, seja ela Home, Sobre Mim ou de algum Projeto.\n\n![ezgif com-gif-maker](https://user-images.githubusercontent.com/101435037/212457678-36a7f64c-ff5f-4c2e-934f-9dbd5ded9db9.gif)\n\n## *Card de sugest√µes*\n\nAo final de cada artigo de Projeto, a p√°gina disponibiliza uma rota diferente para um pr√≥ximo projeto, atrav√©s de m√©todos do JavaScript de filter, sort e slice:\n\n![image](https://user-images.githubusercontent.com/101435037/212457766-0261e42b-ea59-4570-8190-84ea88c311ad.png)\n",
    "tags": [
      {
        "id": 35,
        "name": "React",
        "type": "frontend"
      },
      {
        "id": 36,
        "name": "Styled-Components",
        "type": "frontend"
      },
      {
        "id": 37,
        "name": "Node",
        "type": "backend"
      },
      {
        "id": 38,
        "name": "Vercel",
        "type": "tools"
      },
      {
        "id": 39,
        "name": "Web",
        "type": "web"
      }
    ]
  },

  {
    "id": 3,
    "title": "Organo",
    "text": "> Voc√™ pode consultar o desenvolvimento do projeto no meu reposit√≥rio do [Github](https://github.com/lucassmaniotto/Organo-App)\n\n# Organo v2.0 \n\n Este √© um projeto React feito com [Create React App](https://github.com/facebook/create-react-app) sobre organiza√ß√£o de times e equipes desenvolvido no curso de forma√ß√£o React da [Alura](https://cursos.alura.com.br/formacao-react-javascript) \n\n üè∑Ô∏è Tecnologias: react, jsx, css, html, npm\n\nüöÄ URL: [https://organo-app-blond.vercel.app/](https://organo-app-blond.vercel.app/)\n\nüìö Cursos: \n\n [https://cursos.alura.com.br/course/react-desenvolvendo-javascript](https://cursos.alura.com.br/course/react-desenvolvendo-javascript)\n\n [https://cursos.alura.com.br/course/react-componentes-funcionam](https://cursos.alura.com.br/course/react-componentes-funcionam) \n\n ## Detalhes do projeto \n\n O Organo √© um projeto de estudo de React, onde o usu√°rio pode criar times e equipes, e adicionar membros a elas, com o objetivo de organizar melhor o trabalho em equipe. \n\n ### ‚öôÔ∏è Configurando o projeto\nPara que o projeto funcione corretamente, √© necess√°rio instalar as depend√™ncias do projeto. Para isso, basta executar o comando abaixo no terminal: \n\n```bash\nnpm install\n``` \n\n ### ‚ñ∂Ô∏è Executando o projeto \nNo diret√≥rio do projeto, voc√™ pode executar:\n```bash\nnpm start\n```\nCom o comando acima, voc√™ ir√° rodar o projeto em modo de desenvolvimento que pode ser acessado em [http://localhost:3000](http://localhost:3000) no seu navegador. \n\n ### üìö Bibliotecas\nPara o desenvolvimento foi utilizado algumas bibliotecas do npm sendo elas:\n  * [hex-to-rba](https://www.npmjs.com/package/hex-to-rgba)\n  * [uuid](https://www.npmjs.com/package/uuid)\n  * [sweetalert2](https://sweetalert2.github.io/)\n\n### üí° Funcionalidades\n\n## *Adicionando membros a times - Organo v1.0*\n\nO usu√°rio pode adicionar os membros de sua equipe atrav√©s do formul√°rio abaixo, vinculando-os a um time, com seu nome, cargo e foto.\n\n![image](https://user-images.githubusercontent.com/101435037/209827854-9fbcf40e-6f17-4b38-a029-767950098494.png)\n\n√â importante ressaltar que a imagem deve ser informada atrav√©s de url para que o programa possa navegar at√© ela e exibi-la na p√°gina:\n\n![image](https://user-images.githubusercontent.com/101435037/209828098-a9e14d03-5c86-46ec-92a8-25abd18f4f3a.png)\n\nAp√≥s adicionar seus membros, cada um √© dispostos em sess√µes selecionadas pelo formul√°rio\n\n![ezgif com-gif-maker](https://user-images.githubusercontent.com/101435037/209831596-035d911c-0e15-40c2-bf04-674a726c42ec.gif)\n\n## *Esconder formul√°rio - Organo v1.0*\n\nAp√≥s ter pelo menos um registro de time, a sess√£o de grupos √© exibida junto ao bot√£o de esconder formul√°rio para melhor visualiza√ß√£o:\n\n![ezgif com-gif-maker (1)](https://user-images.githubusercontent.com/101435037/209832752-db6f7bf9-708d-45ca-bacf-bcfcedc23a13.gif)\n\n## *Criando novos times - Organo v2.0*\n\nO usu√°rio, atrav√©s do formul√°rio de times, pode criar uma nova section para vincular os cards de membros no primeiro formul√°rio, podendo escolher seu nome e cor:\n\n![ezgif com-gif-maker](https://user-images.githubusercontent.com/101435037/211048759-49f5d4e7-9b41-4af6-97b5-b9ef1acaf241.gif)\n\n## *Mudar cores das sections  - Organo v2.0*\nEm cada section da organiza√ß√£o, ao canto existe um input de tipo cor que √© poss√≠vel alterar, mudando a cor dos cards e do background da section:\n\n![ezgif com-gif-maker (1)](https://user-images.githubusercontent.com/101435037/211050003-aa0bc832-4da3-47f4-8292-637aebb9e0dd.gif)\n\n## *Dele√ß√£o de cards  - Organo v2.0*\n\nEm cada card criado √© poss√≠vel visualizar um icone de exclus√£o que ao pressionado exclui o card em quest√£o, desde que o mesmo n√£o seja um card favoritado:\n\n![ezgif com-gif-maker (2)](https://user-images.githubusercontent.com/101435037/211051233-cad59f85-7d92-46f7-89ad-273bba2b2058.gif)\n\n## *Persist√™ncia de dados no Local Storage  - Organo v2.0*\n\nEm cada submit de formul√°rio, adicionando membros e times, mudando suas cores e os removendo, o Local Storage guarda todas as informa√ß√µes para que o organograma n√£o seja perdido quando √© atualizada ou fechada a p√°gina.",
    "tags": [
      {
        "id": 25,
        "name": "React",
        "type": "frontend"
      },
      {
        "id": 34,
        "name": "Javascript",
        "type": "frontend"
      },
      {
        "id": 45,
        "name": "Typescript",
        "type": "frontend"
      },
      {
        "id": 26,
        "name": "CSS",
        "type": "frontend"
      },
      {
        "id": 27,
        "name": "Node",
        "type": "backend"
      },
      {
        "id": 29,
        "name": "Vercel",
        "type": "tools"
      },
      {
        "id": 26,
        "name": "Web",
        "type": "web"
      }
    ]
  },

  {
    "id": 4,
    "title": "HZC Skate Blog",
    "text": "> Voc√™ pode consultar o desenvolvimento do projeto no meu reposit√≥rio do [Github](https://github.com/lucassmaniotto/HZC-Skate-Blog)\n\nSite desenvolvido no curso de FlexBox e Grid da Alura.\n\n üè∑Ô∏è Tecnologias: html, css, javascript \n\n üöÄ URL: [https://hzc-skate-blog-n4ps.vercel.app/](https://hzc-skate-blog-n4ps.vercel.app/)\n\n üìö Curso: [https://cursos.alura.com.br/formacao-html-e-css](https://cursos.alura.com.br/formacao-html-e-css) \n\n ## Detalhes do projeto\n\nO projeto foi desenvolvido com a metodologia Mobile-First e de forma Responsiva a diferentes telas de exibi√ß√£o durante o curso [CSS: dispondo elementos com Flexbox e Grid](https://cursos.alura.com.br/course/css-dispondo-elementos-flexbox-grid), contando com 3 p√°ginas e 2 artigos baseados no template [Figma](https://www.figma.com/file/ibWktwVpnog76rMYOdVhks/Dispondo-elementos-com-flexbox-e-grid?node-id=54%3A2358), que foi disponibilizado durante as aulas.\n\n### Home\nA p√°gina principal apresenta os principais v√≠deos do blog e seus produtos, juntamente a links para artigos no card\n\n![Home - HZC](https://user-images.githubusercontent.com/101435037/203368808-fc0c6c50-45c4-4617-b88e-d1eb306610f0.png)\n\n### V√≠deos\nA p√°gina de v√≠deos apresenta os cards com os v√≠deos mais vistos, junto a um v√≠deo de destaque que pode redirecionar a um artigo com um v√≠deo dispon√≠vel para assistir\n\n![V√≠deos - HZC](https://user-images.githubusercontent.com/101435037/203369348-4f071db6-3c08-4f9a-8000-29bd64cbb098.png)\n\n#### Artigo de V√≠deo\n\nNessa p√°gina √© poss√≠vel visualizar um template de artigo e o v√≠deo do card como cabe√ßalho em um iframe do youtube\n> Cr√©ditos do v√≠deo: https://www.youtube.com/@ThrasherMag\n![HZC - Life is...](https://user-images.githubusercontent.com/101435037/203369693-cbeafd12-e5f9-46bc-922e-a98c3f0e05e2.png)\n\n### Picos\nA p√°gina de picos √© uma simula√ß√£o de locais interessantes para andar de skate com artigos sobre os mesmos, onde o primeiro pode ser clicado e redicionar o usu√°rio para um artigo sobre o local\n![Picos - HZC](https://user-images.githubusercontent.com/101435037/203370566-3291151a-6b44-4e8b-af7c-747635fb4dc9.png)\n\n#### Artigo do Pico\nNessa p√°gina √© poss√≠vel visualizar um template de artigo e sua imagem como cabe√ßalho acima do texto do redator\n> ![Gap do Ita√∫ da Volunt√°rios da P√°tria](https://user-images.githubusercontent.com/101435037/203370713-16735605-a580-4672-9186-b13cdc6fb2f9.png)\n\n### Responsividade\nO projeto √© 100% responsivo e pensando no usu√°rio de diversos dispositivos, sendo adapdado para cada um:\n\n[![Watch the video](https://user-images.githubusercontent.com/101435037/212350066-bd4d41d9-8715-4b6e-89f7-fce88536887d.png)](https://user-images.githubusercontent.com/101435037/203374085-491051a4-d6c2-456c-8e00-f7d3a634177f.mp4)",
    "tags": [
      {
        "id": 28,
        "name": "Javascript",
        "type": "frontend"
      },
      {
        "id": 30,
        "name": "CSS",
        "type": "frontend"
      },
      {
        "id": 31,
        "name": "HTML",
        "type": "frontend"
      },
      {
        "id": 33,
        "name": "Vercel",
        "type": "tools"
      },
      {
        "id": 32,
        "name": "Web",
        "type": "web"
      }
    ]
  },

  {
    "id": 5,
    "title": "Dungeons & Comics",
    "text": "> Voc√™ pode consultar o desenvolvimento do projeto no meu reposit√≥rio do [Github](https://github.com/lucassmaniotto/Dungeons-And-Comics)\n\n# Dungeons & Comics üé≤üê≤\n\nSite de Livros e Comics desenvolvido no curso de responsividade com mobile-first da Alura\n\n üè∑Ô∏è Tecnologias: html, css, javascript\n\nüöÄ URL: [https://dungeons-and-comics.vercel.app/](https://dungeons-and-comics.vercel.app/)\n\nüìö Cursos:\n\n[https://cursos.alura.com.br/formacao-html-e-css](https://cursos.alura.com.br/formacao-html-e-css)\n\n[https://cursos.alura.com.br/formacao-javascript-front-end](https://cursos.alura.com.br/formacao-javascript-front-end) \n\n## Detalhes do projeto\n\n Dungeons & Comics √© um projeto de um site de venda de livros, comicbooks, e coisas de RPG em geral inspirado no site [Casa do C√≥digo](https://www.casadocodigo.com.br/), utilizando o template do [Figma](https://www.figma.com/file/sSMbIqKaGBd66Y8roxTk2p/AluraBooks?node-id=37%3A94&t=qgTpN8c9LQ6xyvqa-0) disponibilizado pelo curso da Alura [HTML e CSS: responsividade com mobile-first](https://cursos.alura.com.br/course/html-css-responsividade-mobile-first). Como no nome do curso, esse projeto foi desenvolvido pelo conceito de Mobile-First, possuindo disposi√ß√µes para telas de 1728px, 1024px e demais telas mobile, utilizando HTML e CSS, al√©m de um pouco de JavaScript.\n\n### Responsividade\n\nO site √© 100% responsivo e conta com acessibilidade para qualquer tela que o usu√°rio preferir.\n\n![image](https://user-images.githubusercontent.com/101435037/207893280-e9bf8f94-d0e8-4920-84c4-8ef5c7aa0c35.png) \n\n ![image](https://user-images.githubusercontent.com/101435037/207893526-6275f232-c891-4b99-aeab-95b33330de11.png) \n\n ![image](https://user-images.githubusercontent.com/101435037/207893610-1c7713f8-f626-4678-a5bd-fa62bae2d2e9.png) \n\n### Funcionalidades\n\nO site conta com algumas implementa√ß√µes din√¢micas, como carross√©is e um formul√°rio de registro que consome a dados de API:\n\n#### Carrossel\n\n![ezgif com-gif-maker](https://user-images.githubusercontent.com/101435037/207896227-7d9c78ad-9d4c-4a53-a165-987e2b216d2d.gif)\n\n#### Formul√°rio de cadastro\n\nO formul√°rio de cadastro est√° dispon√≠vel na √¢ncora *Meu Perfil* e consome a api [ViaCEP](https://viacep.com.br/) para consultas de CEP.\n\n![image](https://user-images.githubusercontent.com/101435037/207906444-d6a6f08a-4718-4b21-b02c-0597e8f3f9f2.png)\n\n\nCom o consumo da API ViaCEP, ao informar um n√∫mero de CEP v√°lido, v√°rios relacionados do formul√°rio s√£o preenchidos automaticamente. Caso o CEP informado seja inv√°lido, √© tratado o erro e o usu√°rio √© informado que o CEP n√£o est√° correto.\n\n![ezgif com-gif-maker](https://user-images.githubusercontent.com/101435037/207904136-e350ddf8-4b6e-4d55-9b55-1c0801a634d4.gif)",
    "tags": [
      {
        "id": 40,
        "name": "Javascript",
        "type": "frontend"
      },
      {
        "id": 41,
        "name": "CSS",
        "type": "frontend"
      },
      {
        "id": 42,
        "name": "HTML",
        "type": "frontend"
      },
      {
        "id": 43,
        "name": "Vercel",
        "type": "tools"
      },
      {
        "id": 44,
        "name": "Web",
        "type": "web"
      }
    ]
  },

  {
    "id": 6,
    "title": "Web Speech Game",
    "text": "> Voc√™ pode consultar o desenvolvimento do projeto no meu reposit√≥rio do [Github](https://github.com/lucassmaniotto/Web-Speech-Game)\n\n# Web Speech Guessing Game\n\nProjeto de jogo de adivinha√ß√£o por fala consumindo dados externos da Web Speech API.\n\n üè∑Ô∏è Tecnologias: html, css, javascript\n\n üöÄ URL: [https://web-speech-game.vercel.app/](https://web-speech-game.vercel.app/)\n\n üìö Curso: [https://cursos.alura.com.br/formacao-javascript-front-end](https://cursos.alura.com.br/formacao-javascript-front-end)\n\n## Detalhes do projeto\n\n![banner](https://user-images.githubusercontent.com/101435037/207368715-e640c3e5-bf46-4807-bad7-43561aa7d0ad.png)\n\nO projeto foi feito atrav√©s do curso da Alura de [Javascript para Frontend](https://cursos.alura.com.br/formacao-javascript-front-end), utilizando a [Web Speech API](https://developer.mozilla.org/en-US/docs/Web/API/Web_Speech_API).\n\nA aplica√ß√£o consiste em um jogo de adivinha√ß√£o de n√∫meros com chances infinitas. Para jog√°-lo basta utilizar seu microfone e dizer seu chute. Os algoritmos da aplica√ß√£o sorteiam um n√∫mero aleat√≥rio e os dados que s√£o enviados do microfone s√£o validados, retornando certos tipos de mensagem para cada caso.\n\n### Funcionamento\nPara cada chute, caso o n√∫mero n√£o for acertado, dicas s√£o postas com o chute na tela para o usu√°rio acertar o n√∫mero secreto\n\n![chute](https://user-images.githubusercontent.com/101435037/207372538-544ff108-8dca-4e1a-b396-1165edd722b1.png)\n\nCaso algum dado a ser validado seja um absurdo, o algoritmo trata de formas diferentes:\n* Para valores fora do intervalo √© informado uma mensagem dizendo em que intervalo devemos operar:\n\n![a](https://user-images.githubusercontent.com/101435037/207373186-5ff794dd-5d60-4dc2-97df-35e1c0e13a46.png)\n\n* Para valores que n√£o sejam n√∫meros, tamb√©m √© tratado de forma diferente informando que o dado n√£o √© v√°lido:\n\n![13](https://user-images.githubusercontent.com/101435037/207373929-8df26b57-4d24-4a4a-9969-95bcc1fe586c.png)\n\n### Efeitos CSS\nO Projeto tamb√©m conta com efeitos visuais quando ocorre uma vit√≥ria, onde √© simulado fogos de artif√≠cio com keyframes, feitos com CSS puro:\n\n![aa](https://user-images.githubusercontent.com/101435037/207378283-be7a6bfd-e95c-4235-b8de-8b4ade66cdd3.gif)\n\n### Responsividade\nO jogo pode ser jogado tanto no computador, como tablet e smartphone",
    "tags": [
      {
        "id": 46,
        "name": "Javascript",
        "type": "frontend"
      },
      {
        "id": 47,
        "name": "CSS",
        "type": "frontend"
      },
      {
        "id": 48,
        "name": "HTML",
        "type": "frontend"
      },
      {
        "id": 49,
        "name": "Vercel",
        "type": "tools"
      },
      {
        "id": 50,
        "name": "Web",
        "type": "web"
      }
    ]
  },

  {
    "id": 8,
    "title": "PomoApp",
    "text": "> Voc√™ pode consultar o desenvolvimento do projeto no meu reposit√≥rio do [Github](https://github.com/lucassmaniotto/Pomodoro)\n\n# PomoApp üçÖ\n\nAplicativo Web que implementa a t√©cnica do Pomodoro, controlando seus ciclos e informando horas trabalhadas.\n\nüè∑Ô∏è Tecnologias: react, typescript, html5, css3, vscode, eslint, prettier\n\nüöÄ URL: [https://pomodoro-lucassmaniotto.vercel.app/](https://pomodoro-lucassmaniotto.vercel.app/)\n\nüìö Curso: [https://www.udemy.com/course/curso-de-javascript-moderno-do-basico-ao-avancado/](https://www.udemy.com/course/curso-de-javascript-moderno-do-basico-ao-avancado/)\n\n![Banner](https://github.com/lucassmaniotto/Pomodoro/assets/101435037/226b070c-d1a4-4bbb-9c9c-7d283ad465bd#vitrinedev)\n\n## Detalhes do projeto\n\nPomoApp foi desenvolvido na linguagem Typescript junto a tecnologia React para implementar uma t√©cnica de gerenciamento de tempo conhecida como Pomodoro, amplamente utilizada como uma abordagem eficaz para aumentar a produtividade e evitar a procrastina√ß√£o, no qual foi desenvolvido no curso da Udemy de [Luiz Ot√°vio Miranda](https://www.udemy.com/user/luiz-otavio-miranda/), [Curso de JavaScript e TypeScript do b√°sico ao avan√ßado](https://www.udemy.com/course/curso-de-javascript-moderno-do-basico-ao-avancado/#instructor-1).\n\n ### ‚öôÔ∏è Configurando o projeto\nPara que o projeto funcione corretamente, √© necess√°rio instalar as depend√™ncias do projeto. Para isso, basta executar o comando abaixo no terminal: \n\n```bash\nnpm install\n``` \n\n ### ‚ñ∂Ô∏è Executando o projeto \nNo diret√≥rio do projeto, voc√™ pode executar:\n```bash\nnpm start\n```\nCom o comando acima, voc√™ ir√° rodar o projeto em modo de desenvolvimento que pode ser acessado em [http://localhost:3000](http://localhost:3000) no seu navegador. \n\n ### üìö Bibliotecas\nPara o desenvolvimento foi utilizado algumas bibliotecas do npm sendo elas:\n * [react](https://www.npmjs.com/package/react)\n * [typescript](https://www.npmjs.com/package/typescript)\n * [eslint](https://www.npmjs.com/package/eslint)\n * [prettier](https://www.npmjs.com/package/prettier)\n * [react-router-dom](https://www.npmjs.com/package/react-router-dom)\n * [sweetalert2](https://www.npmjs.com/package/sweetalert2)\n * [react-icons](https://www.npmjs.com/package/react-icons)\n\n### üçÖ Pomodoro\n\n O Pomodoro √© uma t√©cnica de gerenciamento de tempo desenvolvida por Francesco Cirillo no final dos anos 1980. O m√©todo foi nomeado Pomodoro (tomate em italiano) porque Cirillo usou um timer de cozinha em forma de tomate para controlar seu tempo enquanto estudava. O objetivo do m√©todo Pomodoro √© aumentar a produtividade, dividindo o trabalho em per√≠odos de tempo curtos e cronometrados, chamados de pomodoros.\n\nA t√©cnica Pomodoro funciona da seguinte maneira:\n1. 1- Escolha uma tarefa que voc√™ deseja realizar.\n2. 2- Configure um cron√¥metro para 25 minutos, que √© a dura√ß√£o de um pomodoro.\n3. 3- Trabalhe intensamente na tarefa escolhida at√© o cron√¥metro tocar.\n4. 4- Fa√ßa uma pausa curta de cerca de 5 minutos ap√≥s cada pomodoro.\n5. 5- Ap√≥s completar quatro pomodoros, fa√ßa uma pausa mais longa de cerca de 15 a 30 minutos. ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä\n\n O ciclo de trabalho (pomodoro) de 25 minutos seguido por uma pausa curta e depois uma pausa longa √© repetido ao longo do dia. A ideia √© que os intervalos curtos de descanso ajudem a manter o foco e a concentra√ß√£o durante o per√≠odo de trabalho. Al√©m disso, o m√©todo Pomodoro promove a conscientiza√ß√£o sobre como voc√™ usa seu tempo, ajudando a identificar quanto tempo leva para concluir diferentes tipos de tarefas.\n\nA t√©cnica Pomodoro √© amplamente utilizada como uma abordagem eficaz para aumentar a produtividade, evitar a procrastina√ß√£o e melhorar a gest√£o do tempo. Existem at√© aplicativos e ferramentas online dispon√≠veis que podem ajud√°-lo a implementar a t√©cnica Pomodoro em sua rotina di√°ria.\n\n### üí° Funcionalidades\n\n#### Ciclos de Pomodoro\n\nAcessando durante a primeira vez o site, o Pomodoro se encontra em Descanso e marcando 25 minutos no seu contador, informando o pr√≥ximo ciclo.\n\n![Estado inicial](https://github.com/lucassmaniotto/Pomodoro/assets/101435037/53acf20c-0ef7-470a-8fde-f558ddda9445)\n\nPara o controle de Pomodoros, os ciclos se baseiam em bot√µes de a√ß√£o. Ao acionar o bot√£o Trabalhar um som de sino toca, o contrador de tempo de trabalho come√ßa a contar e incrementar no quadro de informa√ß√µes em Horas trabalhadas, al√©m de mudar o tema da p√°gina para cores mais vivas, mostrando um bot√£o novo que pode ser pausado ou iniciado o contador. Tamb√©m, o t√≠tulo da p√°gina muda para o tempo restante de trabalho, para caso utilize o app em segundo plano, possa ser controlado o tempo de trabalhou ou descanso.\n\n![T√≠tulo da p√°g. - Trabalho](https://github.com/lucassmaniotto/Pomodoro/assets/101435037/c600a911-543a-4eed-bdab-f0833a822295)\n\n![Pomodoro - Trabalho](https://github.com/lucassmaniotto/Pomodoro/assets/101435037/830b2767-561e-42a6-a4f9-3ab713488a52)\n\nQuando o contador de tempo encerra no status de Trabalhando um som de sino toca duas vezes informando que o descanso come√ßou. O tema da p√°gina e o status mudam novamente, onde o usu√°rio ganha 5 minutos de seu tempo para realizar seu descanso ou outras atividades que n√£o est√£o relacionadas ao seu tempo de foco. No quadro de informa√ß√µes, Horas trabalhadas s√£o pausadas, Pomodoros conclu√≠dos √© incrementado e o pr√≥ximo ciclo √© atualizado para Trabalho.\n\n![Pomodoro - Descanso](https://github.com/lucassmaniotto/Pomodoro/assets/101435037/df81d2ca-b0ae-43a6-b47b-70a2c0c546a3)\n\nAp√≥s o usu√°rio terminar 4 Pomodoros, o seu tempo de descanso se torna 15 minutos como recompensa:\n\n![4 Pomodoros](https://github.com/lucassmaniotto/Pomodoro/assets/101435037/0a33080e-1e2e-498b-9bba-4fad1f7e6300)\n\n#### Configura√ß√µes de Tempo\n\nO PomoApp possui uma rota '/configurations' que permite que o usu√°rio configure os tempos de Pomodoro conforme desejar que pode ser acessada no cabe√ßalho da p√°gina.\n\n![Rotas](https://github.com/lucassmaniotto/Pomodoro/assets/101435037/f2925c78-ec76-45da-8975-c6c717d195ee)\n\nAntes de mudar de rota, um alerta do Sweet Alert surge, informando que caso as configura√ß√µes forem acessadas, o timer de Pomodoro ser√° reiniciado. Sendo assim, o usu√°rio deve confirmar nos bot√µes se quer continuar com a a√ß√£o ou n√£o. \n\n![Confirma√ß√£o](https://github.com/lucassmaniotto/Pomodoro/assets/101435037/23ccccdf-607e-4a96-b476-d44b310dc8ae)\n\n  Acessando a rota de Configura√ß√µes, o usu√°rio pode alterar os tempos de Pomodoro nas caixas de texto, sendo necess√°rio inform√°-los em segundos. Salvando as altera√ß√µes, os dados s√£o gravados no localStorage do navegador e consumidos pela rota da p√°gina inicial \n\n![Configura√ß√µes](https://github.com/lucassmaniotto/Pomodoro/assets/101435037/b5a13153-cec0-4003-8ed4-a860769ead21)\n\n![localStorage](https://github.com/lucassmaniotto/Pomodoro/assets/101435037/323ba20a-b57d-4877-84cf-3fb35fd35051)\n\n![Dados Consumidos](https://github.com/lucassmaniotto/Pomodoro/assets/101435037/8e1c96ac-ffa5-4db0-bfbf-e7c9d3639208)",
    "tags": [
      {
        "id": 25,
        "name": "React",
        "type": "frontend"
      },
      {
        "id": 45,
        "name": "Typescript",
        "type": "frontend"
      },
      {
        "id": 26,
        "name": "CSS",
        "type": "frontend"
      },
      {
        "id": 27,
        "name": "Node",
        "type": "backend"
      },
      {
        "id": 29,
        "name": "Vercel",
        "type": "tools"
      },
      {
        "id": 26,
        "name": "Web",
        "type": "web"
      }
    ]
  }
]
